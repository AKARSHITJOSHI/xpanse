{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:9090",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Terraform",
      "description": "APIs for running Terraform commands"
    }
  ],
  "paths": {
    "/terraform-boot/destroy/scripts": {
      "post": {
        "tags": [
          "Terraform"
        ],
        "description": "Destroy resources via Terraform",
        "operationId": "destroyWithScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformDestroyWithScriptsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/deploy/{module_directory}": {
      "post": {
        "tags": [
          "Terraform"
        ],
        "description": "Deploy resources via Terraform",
        "operationId": "deploy",
        "parameters": [
          {
            "name": "module_directory",
            "in": "path",
            "description": "directory name where the Terraform module files exist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformDeployFromDirectoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/deploy/scripts": {
      "post": {
        "tags": [
          "Terraform"
        ],
        "description": "Deploy resources via Terraform",
        "operationId": "deployWithScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformDeployWithScriptsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/deploy/scripts/async": {
      "post": {
        "tags": [
          "Terraform"
        ],
        "description": "async deploy resources via Terraform",
        "operationId": "asyncDeployWithScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncDeployFromDirectoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/terraform-boot/validate/{module_directory}": {
      "get": {
        "tags": [
          "Terraform"
        ],
        "description": "Validate the Terraform modules",
        "operationId": "validate",
        "parameters": [
          {
            "name": "module_directory",
            "in": "path",
            "description": "directory name where the Terraform module files exist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/health": {
      "get": {
        "tags": [
          "Terraform"
        ],
        "description": "Check health of Terraform API service",
        "operationId": "healthCheck",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformBootSystemStatus"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/destroy/{module_directory}": {
      "delete": {
        "tags": [
          "Terraform"
        ],
        "description": "Destroy the Terraform modules",
        "operationId": "destroy",
        "parameters": [
          {
            "name": "module_directory",
            "in": "path",
            "description": "directory name where the Terraform module files exist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformDestroyFromDirectoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/destroy/scripts/async": {
      "delete": {
        "tags": [
          "Terraform"
        ],
        "description": "Async destroy the Terraform modules",
        "operationId": "asyncDestroyWithScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncDestroyFromDirectoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Response": {
        "required": [
          "details",
          "resultType",
          "success"
        ],
        "type": "object",
        "properties": {
          "resultType": {
            "type": "string",
            "description": "The result code of response.",
            "enum": [
              "Success",
              "Runtime Error",
              "Parameters Invalid",
              "Terraform Script Invalid",
              "Unprocessable Entity",
              "Response Not Valid",
              "Failure while connecting to backend",
              "Credential Capability Not Found",
              "Credentials Not Found",
              "Credential Variables Not Complete",
              "Flavor Invalid",
              "Terraform Execution Failed",
              "Plugin Not Found",
              "Deployer Not Found",
              "Terraform Provider Not Found",
              "No Credential Definition Available",
              "Invalid Service State",
              "Resource Invalid For Monitoring",
              "Unhandled Exception",
              "Service Already Registered",
              "Icon Processing Failed",
              "Service Not Registered",
              "Service Deployment Not Found",
              "Resource Not Found",
              "Deployment Variable Invalid",
              "Service Update Not Allowed",
              "Unauthorized",
              "Access Denied",
              "Sensitive Field Encryption Or Decryption Failed Exception",
              "Unsupported Enum Value",
              "Service Unavailable"
            ]
          },
          "details": {
            "type": "array",
            "description": "Details of the errors occurred",
            "items": {
              "type": "string",
              "description": "Details of the errors occurred"
            }
          },
          "success": {
            "type": "boolean",
            "description": "Describes if the request is successful"
          }
        }
      },
      "TerraformDestroyWithScriptsRequest": {
        "required": [
          "scripts",
          "tfState",
          "variables"
        ],
        "type": "object",
        "properties": {
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "scripts": {
            "type": "array",
            "description": "List of script files for destroy requests deployed via scripts",
            "items": {
              "type": "string",
              "description": "List of script files for destroy requests deployed via scripts"
            }
          },
          "tfState": {
            "type": "string",
            "description": "The .tfState file content after deployment"
          }
        }
      },
      "TerraformResult": {
        "type": "object",
        "properties": {
          "commandStdOutput": {
            "type": "string"
          },
          "commandStdError": {
            "type": "string"
          },
          "terraformState": {
            "type": "string"
          },
          "importantFileContentMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "commandSuccessful": {
            "type": "boolean"
          }
        }
      },
      "TerraformDeployFromDirectoryRequest": {
        "required": [
          "isPlanOnly",
          "variables"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          }
        }
      },
      "TerraformDeployWithScriptsRequest": {
        "required": [
          "isPlanOnly",
          "scripts",
          "variables"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "scripts": {
            "type": "array",
            "description": "List of script files for deployment requests deployed via scripts",
            "items": {
              "type": "string",
              "description": "List of script files for deployment requests deployed via scripts"
            }
          }
        }
      },
      "TerraformAsyncDeployFromDirectoryRequest": {
        "required": [
          "isPlanOnly",
          "scripts",
          "variables",
          "webhookConfig"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "scripts": {
            "type": "array",
            "description": "List of script files for deployment requests deployed via scripts",
            "items": {
              "type": "string",
              "description": "List of script files for deployment requests deployed via scripts"
            }
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig"
          }
        }
      },
      "WebhookConfig": {
        "required": [
          "authType",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Callback address after deployment/destroy is completed."
          },
          "authType": {
            "type": "string",
            "description": "The permission type when calling back.",
            "enum": [
              "NONE",
              "OAUTH2"
            ]
          }
        },
        "description": "Configuration information of webhook."
      },
      "TerraformValidateDiagnostics": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          }
        }
      },
      "TerraformValidationResult": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "diagnostics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TerraformValidateDiagnostics"
            }
          }
        }
      },
      "TerraformBootSystemStatus": {
        "required": [
          "healthStatus"
        ],
        "type": "object",
        "properties": {
          "healthStatus": {
            "type": "string",
            "description": "The health status of Xpanse api service.",
            "enum": [
              "OK",
              "NOK"
            ]
          }
        }
      },
      "TerraformDestroyFromDirectoryRequest": {
        "required": [
          "variables"
        ],
        "type": "object",
        "properties": {
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          }
        }
      },
      "TerraformAsyncDestroyFromDirectoryRequest": {
        "required": [
          "scripts",
          "tfState",
          "variables",
          "webhookConfig"
        ],
        "type": "object",
        "properties": {
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "scripts": {
            "type": "array",
            "description": "List of script files for destroy requests deployed via scripts",
            "items": {
              "type": "string",
              "description": "List of script files for destroy requests deployed via scripts"
            }
          },
          "tfState": {
            "type": "string",
            "description": "The .tfState file content after deployment"
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig"
          }
        }
      }
    }
  }
}