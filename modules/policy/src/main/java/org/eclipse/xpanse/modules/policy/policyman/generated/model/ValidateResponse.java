/*
 * OpenAPI of policy-man
 * OpenAPI of policy-man server
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.eclipse.xpanse.modules.policy.policyman.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import java.util.Objects;

/** ValidateResponse */
@JsonPropertyOrder({
    ValidateResponse.JSON_PROPERTY_ERR_MSG,
    ValidateResponse.JSON_PROPERTY_IS_SUCCESSFUL,
    ValidateResponse.JSON_PROPERTY_POLICY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ValidateResponse {
    public static final String JSON_PROPERTY_ERR_MSG = "err_msg";
    private String errMsg;

    public static final String JSON_PROPERTY_IS_SUCCESSFUL = "isSuccessful";
    private Boolean isSuccessful;

    public static final String JSON_PROPERTY_POLICY = "policy";
    private String policy;

    public ValidateResponse() {}

    public ValidateResponse errMsg(String errMsg) {

        this.errMsg = errMsg;
        return this;
    }

    /**
     * Get errMsg
     *
     * @return errMsg
     */
    @jakarta.annotation.Nonnull
    @NotNull
    @JsonProperty(JSON_PROPERTY_ERR_MSG)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getErrMsg() {
        return errMsg;
    }

    @JsonProperty(JSON_PROPERTY_ERR_MSG)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setErrMsg(String errMsg) {
        this.errMsg = errMsg;
    }

    public ValidateResponse isSuccessful(Boolean isSuccessful) {

        this.isSuccessful = isSuccessful;
        return this;
    }

    /**
     * Get isSuccessful
     *
     * @return isSuccessful
     */
    @jakarta.annotation.Nonnull
    @NotNull
    @JsonProperty(JSON_PROPERTY_IS_SUCCESSFUL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsSuccessful() {
        return isSuccessful;
    }

    @JsonProperty(JSON_PROPERTY_IS_SUCCESSFUL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsSuccessful(Boolean isSuccessful) {
        this.isSuccessful = isSuccessful;
    }

    public ValidateResponse policy(String policy) {

        this.policy = policy;
        return this;
    }

    /**
     * Get policy
     *
     * @return policy
     */
    @jakarta.annotation.Nonnull
    @NotNull
    @JsonProperty(JSON_PROPERTY_POLICY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getPolicy() {
        return policy;
    }

    @JsonProperty(JSON_PROPERTY_POLICY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPolicy(String policy) {
        this.policy = policy;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ValidateResponse validateResponse = (ValidateResponse) o;
        return Objects.equals(this.errMsg, validateResponse.errMsg)
                && Objects.equals(this.isSuccessful, validateResponse.isSuccessful)
                && Objects.equals(this.policy, validateResponse.policy);
    }

    @Override
    public int hashCode() {
        return Objects.hash(errMsg, isSuccessful, policy);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ValidateResponse {\n");
        sb.append("    errMsg: ").append(toIndentedString(errMsg)).append("\n");
        sb.append("    isSuccessful: ").append(toIndentedString(isSuccessful)).append("\n");
        sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
